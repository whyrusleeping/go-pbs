// Code generated by protoc-gen-go.
// source: chat.proto
// DO NOT EDIT!

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	chat.proto

It has these top-level messages:
	ChatProtocol
*/
package main

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type ChatProtocol struct {
	Messages         chan *ChatProtocol_Message `protobuf:"bytes,1,rep,name=messages" json:"messages,omitempty"`
	Online           chan string                `protobuf:"bytes,2,rep,name=online" json:"online,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`

	errors  chan error
	closeCh chan struct{}
}

func (m *ChatProtocol) Reset()         { *m = ChatProtocol{} }
func (m *ChatProtocol) String() string { return proto.CompactTextString(m) }
func (*ChatProtocol) ProtoMessage()    {}

func (m *ChatProtocol) GetMessages() chan *ChatProtocol_Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *ChatProtocol) GetOnline() chan string {
	if m != nil {
		return m.Online
	}
	return nil
}

func (m *ChatProtocol) Close() error {
	close(m.Messages)
	close(m.Online)
	close(m.errors)
	close(m.closeCh)
	return nil
}

func (m *ChatProtocol) Errors() chan error {
	return m.errors
}

func (m *ChatProtocol) Closed() <-chan struct{} {
	return m.closeCh
}

type ChatProtocol_Message struct {
	From             *string `protobuf:"bytes,1,req,name=from" json:"from,omitempty"`
	Text             *string `protobuf:"bytes,2,req,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChatProtocol_Message) Reset()         { *m = ChatProtocol_Message{} }
func (m *ChatProtocol_Message) String() string { return proto.CompactTextString(m) }
func (*ChatProtocol_Message) ProtoMessage()    {}

func (m *ChatProtocol_Message) GetFrom() string {
	if m != nil && m.From != nil {
		return *m.From
	}
	return ""
}

func (m *ChatProtocol_Message) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func init() {
}
